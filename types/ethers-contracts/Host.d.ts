/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface HostInterface extends ethers.utils.Interface {
  functions: {
    "addChild(bytes32,string,string,address,bool)": FunctionFragment;
    "fetchChild(address,bytes32)": FunctionFragment;
    "fetchChildren(bytes32)": FunctionFragment;
    "getFamilyByOwner(address)": FunctionFragment;
    "getFamilyIdByOwner(address)": FunctionFragment;
    "getUserType(address)": FunctionFragment;
    "hashFamilyId(address,string)": FunctionFragment;
    "registerParent(bytes32,string)": FunctionFragment;
    "toggleSandbox(address,bytes32)": FunctionFragment;
    "updateAvatarURI(string)": FunctionFragment;
    "updateChildAvatarURI(bytes32,string,uint24)": FunctionFragment;
    "updateUsername(bytes32,string,uint24)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addChild",
    values: [BytesLike, string, string, string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "fetchChild",
    values: [string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "fetchChildren",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getFamilyByOwner",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getFamilyIdByOwner",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "getUserType", values: [string]): string;
  encodeFunctionData(
    functionFragment: "hashFamilyId",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "registerParent",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "toggleSandbox",
    values: [string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "updateAvatarURI",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "updateChildAvatarURI",
    values: [BytesLike, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateUsername",
    values: [BytesLike, string, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "addChild", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "fetchChild", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "fetchChildren",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFamilyByOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFamilyIdByOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserType",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hashFamilyId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "registerParent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "toggleSandbox",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateAvatarURI",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateChildAvatarURI",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateUsername",
    data: BytesLike
  ): Result;

  events: {};
}

export class Host extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: HostInterface;

  functions: {
    addChild(
      _familyId: BytesLike,
      _username: string,
      _avatarURI: string,
      _child: string,
      _sandboxMode: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addChild(bytes32,string,string,address,bool)"(
      _familyId: BytesLike,
      _username: string,
      _avatarURI: string,
      _child: string,
      _sandboxMode: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    fetchChild(
      _child: string,
      _familyId: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      fetchedChild: {
        username: string;
        avatarURI: string;
        familyId: string;
        memberSince: BigNumber;
        wallet: string;
        childId: number;
        sandboxMode: boolean;
        isActive: boolean;
        0: string;
        1: string;
        2: string;
        3: BigNumber;
        4: string;
        5: number;
        6: boolean;
        7: boolean;
      };
      0: {
        username: string;
        avatarURI: string;
        familyId: string;
        memberSince: BigNumber;
        wallet: string;
        childId: number;
        sandboxMode: boolean;
        isActive: boolean;
        0: string;
        1: string;
        2: string;
        3: BigNumber;
        4: string;
        5: number;
        6: boolean;
        7: boolean;
      };
    }>;

    "fetchChild(address,bytes32)"(
      _child: string,
      _familyId: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      fetchedChild: {
        username: string;
        avatarURI: string;
        familyId: string;
        memberSince: BigNumber;
        wallet: string;
        childId: number;
        sandboxMode: boolean;
        isActive: boolean;
        0: string;
        1: string;
        2: string;
        3: BigNumber;
        4: string;
        5: number;
        6: boolean;
        7: boolean;
      };
      0: {
        username: string;
        avatarURI: string;
        familyId: string;
        memberSince: BigNumber;
        wallet: string;
        childId: number;
        sandboxMode: boolean;
        isActive: boolean;
        0: string;
        1: string;
        2: string;
        3: BigNumber;
        4: string;
        5: number;
        6: boolean;
        7: boolean;
      };
    }>;

    fetchChildren(
      _familyId: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: {
        username: string;
        avatarURI: string;
        familyId: string;
        memberSince: BigNumber;
        wallet: string;
        childId: number;
        sandboxMode: boolean;
        isActive: boolean;
        0: string;
        1: string;
        2: string;
        3: BigNumber;
        4: string;
        5: number;
        6: boolean;
        7: boolean;
      }[];
    }>;

    "fetchChildren(bytes32)"(
      _familyId: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: {
        username: string;
        avatarURI: string;
        familyId: string;
        memberSince: BigNumber;
        wallet: string;
        childId: number;
        sandboxMode: boolean;
        isActive: boolean;
        0: string;
        1: string;
        2: string;
        3: BigNumber;
        4: string;
        5: number;
        6: boolean;
        7: boolean;
      }[];
    }>;

    getFamilyByOwner(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<{
      0: {
        familyId: string;
        memberSince: BigNumber;
        avatarURI: string;
        owner: string;
        numOfChildren: number;
        0: string;
        1: BigNumber;
        2: string;
        3: string;
        4: number;
      };
    }>;

    "getFamilyByOwner(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<{
      0: {
        familyId: string;
        memberSince: BigNumber;
        avatarURI: string;
        owner: string;
        numOfChildren: number;
        0: string;
        1: BigNumber;
        2: string;
        3: string;
        4: number;
      };
    }>;

    getFamilyIdByOwner(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getFamilyIdByOwner(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getUserType(
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: number;
    }>;

    "getUserType(address)"(
      _user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: number;
    }>;

    hashFamilyId(
      _owner: string,
      _id: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "hashFamilyId(address,string)"(
      _owner: string,
      _id: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    registerParent(
      _familyId: BytesLike,
      _avatarURI: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "registerParent(bytes32,string)"(
      _familyId: BytesLike,
      _avatarURI: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    toggleSandbox(
      _child: string,
      _familyId: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "toggleSandbox(address,bytes32)"(
      _child: string,
      _familyId: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    updateAvatarURI(
      _avatarURI: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateAvatarURI(string)"(
      _avatarURI: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    updateChildAvatarURI(
      _familyId: BytesLike,
      _avatarURI: string,
      _childId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateChildAvatarURI(bytes32,string,uint24)"(
      _familyId: BytesLike,
      _avatarURI: string,
      _childId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    updateUsername(
      _familyId: BytesLike,
      _username: string,
      _childId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateUsername(bytes32,string,uint24)"(
      _familyId: BytesLike,
      _username: string,
      _childId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  addChild(
    _familyId: BytesLike,
    _username: string,
    _avatarURI: string,
    _child: string,
    _sandboxMode: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addChild(bytes32,string,string,address,bool)"(
    _familyId: BytesLike,
    _username: string,
    _avatarURI: string,
    _child: string,
    _sandboxMode: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  fetchChild(
    _child: string,
    _familyId: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    username: string;
    avatarURI: string;
    familyId: string;
    memberSince: BigNumber;
    wallet: string;
    childId: number;
    sandboxMode: boolean;
    isActive: boolean;
    0: string;
    1: string;
    2: string;
    3: BigNumber;
    4: string;
    5: number;
    6: boolean;
    7: boolean;
  }>;

  "fetchChild(address,bytes32)"(
    _child: string,
    _familyId: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    username: string;
    avatarURI: string;
    familyId: string;
    memberSince: BigNumber;
    wallet: string;
    childId: number;
    sandboxMode: boolean;
    isActive: boolean;
    0: string;
    1: string;
    2: string;
    3: BigNumber;
    4: string;
    5: number;
    6: boolean;
    7: boolean;
  }>;

  fetchChildren(
    _familyId: BytesLike,
    overrides?: CallOverrides
  ): Promise<
    {
      username: string;
      avatarURI: string;
      familyId: string;
      memberSince: BigNumber;
      wallet: string;
      childId: number;
      sandboxMode: boolean;
      isActive: boolean;
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: string;
      5: number;
      6: boolean;
      7: boolean;
    }[]
  >;

  "fetchChildren(bytes32)"(
    _familyId: BytesLike,
    overrides?: CallOverrides
  ): Promise<
    {
      username: string;
      avatarURI: string;
      familyId: string;
      memberSince: BigNumber;
      wallet: string;
      childId: number;
      sandboxMode: boolean;
      isActive: boolean;
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: string;
      5: number;
      6: boolean;
      7: boolean;
    }[]
  >;

  getFamilyByOwner(
    _owner: string,
    overrides?: CallOverrides
  ): Promise<{
    familyId: string;
    memberSince: BigNumber;
    avatarURI: string;
    owner: string;
    numOfChildren: number;
    0: string;
    1: BigNumber;
    2: string;
    3: string;
    4: number;
  }>;

  "getFamilyByOwner(address)"(
    _owner: string,
    overrides?: CallOverrides
  ): Promise<{
    familyId: string;
    memberSince: BigNumber;
    avatarURI: string;
    owner: string;
    numOfChildren: number;
    0: string;
    1: BigNumber;
    2: string;
    3: string;
    4: number;
  }>;

  getFamilyIdByOwner(
    _owner: string,
    overrides?: CallOverrides
  ): Promise<string>;

  "getFamilyIdByOwner(address)"(
    _owner: string,
    overrides?: CallOverrides
  ): Promise<string>;

  getUserType(_user: string, overrides?: CallOverrides): Promise<number>;

  "getUserType(address)"(
    _user: string,
    overrides?: CallOverrides
  ): Promise<number>;

  hashFamilyId(
    _owner: string,
    _id: string,
    overrides?: CallOverrides
  ): Promise<string>;

  "hashFamilyId(address,string)"(
    _owner: string,
    _id: string,
    overrides?: CallOverrides
  ): Promise<string>;

  registerParent(
    _familyId: BytesLike,
    _avatarURI: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "registerParent(bytes32,string)"(
    _familyId: BytesLike,
    _avatarURI: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  toggleSandbox(
    _child: string,
    _familyId: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "toggleSandbox(address,bytes32)"(
    _child: string,
    _familyId: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  updateAvatarURI(
    _avatarURI: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateAvatarURI(string)"(
    _avatarURI: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  updateChildAvatarURI(
    _familyId: BytesLike,
    _avatarURI: string,
    _childId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateChildAvatarURI(bytes32,string,uint24)"(
    _familyId: BytesLike,
    _avatarURI: string,
    _childId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  updateUsername(
    _familyId: BytesLike,
    _username: string,
    _childId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateUsername(bytes32,string,uint24)"(
    _familyId: BytesLike,
    _username: string,
    _childId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    addChild(
      _familyId: BytesLike,
      _username: string,
      _avatarURI: string,
      _child: string,
      _sandboxMode: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "addChild(bytes32,string,string,address,bool)"(
      _familyId: BytesLike,
      _username: string,
      _avatarURI: string,
      _child: string,
      _sandboxMode: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    fetchChild(
      _child: string,
      _familyId: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      username: string;
      avatarURI: string;
      familyId: string;
      memberSince: BigNumber;
      wallet: string;
      childId: number;
      sandboxMode: boolean;
      isActive: boolean;
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: string;
      5: number;
      6: boolean;
      7: boolean;
    }>;

    "fetchChild(address,bytes32)"(
      _child: string,
      _familyId: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      username: string;
      avatarURI: string;
      familyId: string;
      memberSince: BigNumber;
      wallet: string;
      childId: number;
      sandboxMode: boolean;
      isActive: boolean;
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: string;
      5: number;
      6: boolean;
      7: boolean;
    }>;

    fetchChildren(
      _familyId: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      {
        username: string;
        avatarURI: string;
        familyId: string;
        memberSince: BigNumber;
        wallet: string;
        childId: number;
        sandboxMode: boolean;
        isActive: boolean;
        0: string;
        1: string;
        2: string;
        3: BigNumber;
        4: string;
        5: number;
        6: boolean;
        7: boolean;
      }[]
    >;

    "fetchChildren(bytes32)"(
      _familyId: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      {
        username: string;
        avatarURI: string;
        familyId: string;
        memberSince: BigNumber;
        wallet: string;
        childId: number;
        sandboxMode: boolean;
        isActive: boolean;
        0: string;
        1: string;
        2: string;
        3: BigNumber;
        4: string;
        5: number;
        6: boolean;
        7: boolean;
      }[]
    >;

    getFamilyByOwner(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<{
      familyId: string;
      memberSince: BigNumber;
      avatarURI: string;
      owner: string;
      numOfChildren: number;
      0: string;
      1: BigNumber;
      2: string;
      3: string;
      4: number;
    }>;

    "getFamilyByOwner(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<{
      familyId: string;
      memberSince: BigNumber;
      avatarURI: string;
      owner: string;
      numOfChildren: number;
      0: string;
      1: BigNumber;
      2: string;
      3: string;
      4: number;
    }>;

    getFamilyIdByOwner(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "getFamilyIdByOwner(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<string>;

    getUserType(_user: string, overrides?: CallOverrides): Promise<number>;

    "getUserType(address)"(
      _user: string,
      overrides?: CallOverrides
    ): Promise<number>;

    hashFamilyId(
      _owner: string,
      _id: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "hashFamilyId(address,string)"(
      _owner: string,
      _id: string,
      overrides?: CallOverrides
    ): Promise<string>;

    registerParent(
      _familyId: BytesLike,
      _avatarURI: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "registerParent(bytes32,string)"(
      _familyId: BytesLike,
      _avatarURI: string,
      overrides?: CallOverrides
    ): Promise<void>;

    toggleSandbox(
      _child: string,
      _familyId: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "toggleSandbox(address,bytes32)"(
      _child: string,
      _familyId: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    updateAvatarURI(
      _avatarURI: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateAvatarURI(string)"(
      _avatarURI: string,
      overrides?: CallOverrides
    ): Promise<void>;

    updateChildAvatarURI(
      _familyId: BytesLike,
      _avatarURI: string,
      _childId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateChildAvatarURI(bytes32,string,uint24)"(
      _familyId: BytesLike,
      _avatarURI: string,
      _childId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    updateUsername(
      _familyId: BytesLike,
      _username: string,
      _childId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateUsername(bytes32,string,uint24)"(
      _familyId: BytesLike,
      _username: string,
      _childId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    addChild(
      _familyId: BytesLike,
      _username: string,
      _avatarURI: string,
      _child: string,
      _sandboxMode: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "addChild(bytes32,string,string,address,bool)"(
      _familyId: BytesLike,
      _username: string,
      _avatarURI: string,
      _child: string,
      _sandboxMode: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    fetchChild(
      _child: string,
      _familyId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "fetchChild(address,bytes32)"(
      _child: string,
      _familyId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    fetchChildren(
      _familyId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "fetchChildren(bytes32)"(
      _familyId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFamilyByOwner(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getFamilyByOwner(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFamilyIdByOwner(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getFamilyIdByOwner(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserType(_user: string, overrides?: CallOverrides): Promise<BigNumber>;

    "getUserType(address)"(
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    hashFamilyId(
      _owner: string,
      _id: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "hashFamilyId(address,string)"(
      _owner: string,
      _id: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    registerParent(
      _familyId: BytesLike,
      _avatarURI: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "registerParent(bytes32,string)"(
      _familyId: BytesLike,
      _avatarURI: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    toggleSandbox(
      _child: string,
      _familyId: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "toggleSandbox(address,bytes32)"(
      _child: string,
      _familyId: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    updateAvatarURI(
      _avatarURI: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateAvatarURI(string)"(
      _avatarURI: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    updateChildAvatarURI(
      _familyId: BytesLike,
      _avatarURI: string,
      _childId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateChildAvatarURI(bytes32,string,uint24)"(
      _familyId: BytesLike,
      _avatarURI: string,
      _childId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    updateUsername(
      _familyId: BytesLike,
      _username: string,
      _childId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateUsername(bytes32,string,uint24)"(
      _familyId: BytesLike,
      _username: string,
      _childId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addChild(
      _familyId: BytesLike,
      _username: string,
      _avatarURI: string,
      _child: string,
      _sandboxMode: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addChild(bytes32,string,string,address,bool)"(
      _familyId: BytesLike,
      _username: string,
      _avatarURI: string,
      _child: string,
      _sandboxMode: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    fetchChild(
      _child: string,
      _familyId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "fetchChild(address,bytes32)"(
      _child: string,
      _familyId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    fetchChildren(
      _familyId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "fetchChildren(bytes32)"(
      _familyId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFamilyByOwner(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getFamilyByOwner(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFamilyIdByOwner(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getFamilyIdByOwner(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserType(
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getUserType(address)"(
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    hashFamilyId(
      _owner: string,
      _id: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "hashFamilyId(address,string)"(
      _owner: string,
      _id: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    registerParent(
      _familyId: BytesLike,
      _avatarURI: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "registerParent(bytes32,string)"(
      _familyId: BytesLike,
      _avatarURI: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    toggleSandbox(
      _child: string,
      _familyId: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "toggleSandbox(address,bytes32)"(
      _child: string,
      _familyId: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    updateAvatarURI(
      _avatarURI: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateAvatarURI(string)"(
      _avatarURI: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    updateChildAvatarURI(
      _familyId: BytesLike,
      _avatarURI: string,
      _childId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateChildAvatarURI(bytes32,string,uint24)"(
      _familyId: BytesLike,
      _avatarURI: string,
      _childId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    updateUsername(
      _familyId: BytesLike,
      _username: string,
      _childId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateUsername(bytes32,string,uint24)"(
      _familyId: BytesLike,
      _username: string,
      _childId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
